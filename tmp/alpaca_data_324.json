[{"instruction": "Detect typos in the following passage.", "input": "I love going for walks in the moubtains.", "output": "The word \"moubtains\" is spelled incorrectly. It should be \"mountains\"."}, {"instruction": "Find the probability of drawing 2 cards from a shuffled deck, with one card being a king and the second card being a heart.", "input": "", "output": "The probability of drawing 2 cards from a shuffled deck, with one card being a king and the second card being a heart is 4/51, or around 0.0784. This is because there is a 1 in 13 chance of drawing a king, and a 1 in 4 chance of drawing a heart."}, {"instruction": "Describe a significant event in British History and explain its importance.", "input": "", "output": "A significant event in British history is the signing of the Magna Carta in 1215 by King John. The Magna Carta was an agreement between the king and the barons of England. It declared that everyone should be subject to the same laws, including the king, and it contained some of the earliest ideas about civil rights and limited government. This document is seen as one of the foundations of the British legal system, helping to shape the world in which we now live."}, {"instruction": "Given a data set, write a program that counts the number of instances of each label.", "input": "Data Set:\n\n['puppy', 'dog', 'kitten', 'cat', 'puppy', 'dog', 'fish', 'cat']", "output": "#include<stdio.h>\n#include <string.h>\n \nint main() \n{\n    char data[][10] = {\"puppy\",\"dog\",\"kitten\",\"cat\",\"puppy\",\"dog\",\"fish\",\"cat\"};\n    int puppy_count = 0;\n    int dog_count = 0;\n    int kitten_count = 0;\n    int cat_count = 0;\n    int fish_count = 0;\n    int i;\n    int size = sizeof(data)/10;\n \n    for(i=0;i<size;i++)\n    {\n        if(strcmp(data[i],\"puppy\")==0)\n            puppy_count++;\n        if(strcmp(data[i],\"dog\")==0)\n            dog_count++;\n        if(strcmp(data[i],\"kitten\")==0)\n            kitten_count++;\n        if(strcmp(data[i],\"cat\")==0)\n            cat_count++;\n        if(strcmp(data[i],\"fish\")==0)\n            fish_count++;\n    }\n    printf(\"puppy count is %d\\ndog count is %d\\nkitten count is %d\\ncat count is %d\\nfish count is %d\\n\",\n    puppy_count, dog_count, kitten_count, cat_count, fish_count);\n \n    return 0;\n  }"}, {"instruction": "Which of the following countries is the least populated?", "input": "A. France \nB. England \nC. Russia \nD. Japan", "output": "D. Japan"}, {"instruction": "Identify the pattern in the following series: 1, 4, 7, 11, ?", "input": "", "output": "14 (each number is 3 more than the previous number)"}, {"instruction": "From the following names, create a list of acronyms.", "input": "Microsoft, Apple, IBM", "output": "MS, APL, IBM"}, {"instruction": "Explain Amazonâ€™s Three-Tier System.", "input": "", "output": "Amazon's Three-Tier System is a database architecture that consists of three layers: the Client layer, the Application layer, and the Database layer. The Client layer includes the Graphical User Interface (GUI) and host files. The Application layer consists of the Web server and application server. The Database layer consists of the back-end database server. The system is designed to provide a secure and efficient platform for the delivery of products and services to the customers."}, {"instruction": "Analyze the following sentence and tell me the verb, noun, and adjectives in it.", "input": "The teacher assigned the homework to the students", "output": "Verb: assigned\nNoun: teacher, homework, students \nAdjectives: none"}, {"instruction": "For the following string, print the last four characters.", "input": "Python", "output": "thon"}, {"instruction": "Name three divisions of the United Nations.", "input": "", "output": "The three divisions of the United Nations are the General Assembly, the Security Council, and the Economic and Social Council."}, {"instruction": "Name three tools that can be used to backup data.", "input": "", "output": "Three tools that can be used to backup data are cloud storage, external hard drives, and USB flash drives."}, {"instruction": "Generate an example of using the following function.", "input": "def append_to_list(lst, element):\n    lst.append(element)\n    return lst", "output": "list1 = [1, 2, 3]\nelement = 4\nappend_to_list(list1, element) # returns [1, 2, 3, 4]"}, {"instruction": "Create a short story of 4-5 sentences based on the following facts.", "input": "Setting: Mountain\nProtagonist: Fisherman\nAntagonist: Shark", "output": "The fisherman ventured up the mountain in search of a good catch. He had heard that the river he was heading to was full of fish, so he was eager to get to the water. But as soon as he reached the river, he heard a loud splash. He saw a giant shark swim away from him. The fisherman was intimidated, but he was determined to catch some fish. Despite the ominous presence of the shark, he continued fishing for the rest of the day and eventually had a great catch."}, {"instruction": "Create an AI application that can play tic-tac-toe.", "input": "", "output": "def board_played (board):\n    for i in range (3):\n        for j in range (3):\n            if board[i][j] != 'X' and board[i][j] != 'O':\n                return False\n\n# Function to perform the basic AI operations to play tic-tac-toe\ndef play_tic_tac_toe (board):\n    # Check if board is full or not \n    if board_played (board) == False : \n        # Generate random position\n        row = random.randint (0,3) \n        col = random.randint (0,3) \n        \n        # Check the safe position \n        if (board[row][col] != 'X' and board[row][col] != 'O'): \n            board[row][col] = 'O'\n        else: \n            # Call function again \n            play_tic_tac_toe (board)\n    else: \n        print (\"Board Played\")"}, {"instruction": "Write a dialog between two characters in a scene.", "input": "Characters: Joe, Alex", "output": "Joe: Hi Alex, it's been a while since we last talked!\n\nAlex: Hey Joe, it sure has! How have you been?\n\nJoe: I'm doing great! I recently got a promotion at work and it's been going really well. How about you?\n\nAlex: I'm doing good too. I'm in the middle of writing a new book, so I've been really busy. It's tough, but it's a labor of love."}, {"instruction": "Write a function to convert a given hexadecimal number to its decimal equivalent.", "input": "", "output": "def hex_to_decimal(num):\n    decimal = 0\n    for i in range(len(num)):\n        if num[i] == 'A':\n            decimal += 10 * (16 ** (len(num)-i-1))\n        elif num[i] == 'B':\n            decimal += 11 * (16 ** (len(num)-i-1))\n        elif num[i] == 'C':\n            decimal += 12 * (16 ** (len(num)-i-1))\n        elif num[i] == 'D':\n            decimal += 13 * (16 ** (len(num)-i-1))\n        elif num[i] == 'E':\n            decimal += 14 * (16 ** (len(num)-i-1))\n        elif num[i] == 'F':\n            decimal += 15 * (16 ** (len(num)-i-1))\n        else:\n            decimal += int(num[i]) * (16 ** (len(num)-i-1))\n    return decimal"}, {"instruction": "Suppose you are writing a program for an item catalog. Model a\nclass for that purpose.", "input": "", "output": "class ItemCatalog:\n    def __init__(self, name, price, description, category, quantity):\n        self.name = name\n        self.price = price\n        self.description = description\n        self.category = category\n        self.quantity = quantity\n    \n    def update_item(self, name, price, description):\n        self.name = name\n        self.price = price\n        self.description = description\n    \n    def update_quantity(self, quantity):\n        self.quantity = quantity\n    \n    def get_item_info(self):\n        return (self.name, self.price, self.description, self.category, self.quantity)"}, {"instruction": "Create an algorithm to find the first repeating character in a string.", "input": "", "output": "def findTheFirstRepeatingCharacter(str): \n    char_hash = {} \n    for i in range(len(str)): \n        if str[i] in char_hash: \n            return str[i]   \n        else: \n            char_hash[str[i]] = i  \n    return 'No Repeating Character Found'"}, {"instruction": "Describe in a few words the following photo", "input": "Image: A man working in an office", "output": "Man writing on a laptop at his desk."}]